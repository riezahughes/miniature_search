{"version":3,"sources":["config.js","filters/Filters.js","filters/AppliedFilters.js","results/Results.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","process","useStyles","makeStyles","theme","root","display","marginLeft","spacing","leaf","flexWrap","minWidth","topLevelFilter","borderRadius","Loading","CircularProgress","FilterCheckBox","label","type","onChecked","checked","FormControlLabel","aria-label","onClick","event","stopPropagation","onFocus","control","Checkbox","onChange","NestedExpansionPanel","children","classes","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","TopLevelFilter","nestedFilters","toggleFilter","React","useState","anchorEl","setAnchorEl","open","Boolean","undefined","value","target","Chip","color","deleteIcon","onDelete","currentTarget","style","margin","marginRight","aria-describedby","clickable","Popover","onClose","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","map","key","Filters","setActiveFilters","activeFilters","enabled","newActiveFilters","useFetch","loading","error","data","Typography","className","name","factions","faction","races","race","AppliedFilters","Object","keys","variant","table","tableBody","tableCell","Results","results","TableContainer","Table","TableBody","i","_score","website","game","price","link","title","inStockQuantity","TableRow","background","TableCell","align","b","toLowerCase","trim","includes","toName","replace","formatCurrency","Link","href","createMuiTheme","overrides","MuiFormLabel","MuiInput","underline","borderBottom","input","App","setResults","searchTerm","setSearchTerm","options","body","filters","activeFilterKey","headers","post","response","search","a","ok","ThemeProvider","noValidate","autoComplete","width","paddingTop","TextField","verticalAlign","InputProps","onKeyPress","preventDefault","Button","window","location","hostname","match","tagManagerArgs","gtmId","auth","preview","TagManager","initialize","ReactGA","pageview","pathname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.46a444e0.chunk.js","sourcesContent":["export const apiUrl = process.env.REACT_APP_API_URL || \"http://localhost:3000\";\nexport const gaId = \"UA-171713860-1\";\nexport const gtmId = \"GTM-KPKGMGP\";\nexport const gtmAuth = \"mB6JVEeoP7Fxi0Oft0y0Fw\";\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useFetch from \"use-http\";\nimport { apiUrl } from \"../config\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  leaf: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    minWidth: \"300px\",\n  },\n\n  topLevelFilter: {\n    borderRadius: 0,\n  },\n}));\n\nconst Loading = () => <CircularProgress />;\n\nconst FilterCheckBox = ({ label, type, onChecked, checked }) => (\n  <FormControlLabel\n    aria-label=\"Acknowledge\"\n    onClick={(event) => event.stopPropagation()}\n    onFocus={(event) => event.stopPropagation()}\n    control={<Checkbox onChange={onChecked(label, type)} checked={checked} />}\n    label={label}\n  />\n);\n\nconst NestedExpansionPanel = ({\n  label,\n  children,\n  classes,\n  onChecked,\n  checked,\n}) =>\n  children ? (\n    <ExpansionPanel>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-label=\"Expand\"\n        aria-controls=\"additional-actions1-content\"\n        id=\"additional-actions1-header\"\n      >\n        <FilterCheckBox\n          label={label}\n          type={\"faction\"}\n          onChecked={onChecked}\n          checked={checked(label, \"faction\")}\n        />\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails\n        classes={{\n          root: classes.leaf,\n        }}\n      >\n        {children}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  ) : (\n    <div>\n      <FilterCheckBox\n        label={label}\n        type={\"race\"}\n        onChecked={onChecked}\n        checked={checked(label, \"race\")}\n      />\n    </div>\n  );\n\nconst TopLevelFilter = ({\n  label,\n  nestedFilters,\n  classes,\n  toggleFilter,\n  checked,\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const onChecked = (value, type) => (event) => {\n    const { checked } = event.target;\n    toggleFilter(value, type, checked);\n  };\n\n  return (\n    <div>\n      <Chip\n        color=\"primary\"\n        deleteIcon={<ExpandMoreIcon />}\n        onDelete={handleClick}\n        style={{ margin: \"10px\", marginLeft: \"1px\", marginRight: \"1px\" }}\n        aria-describedby={`${id}_${label}`}\n        clickable={false}\n        classes={{ root: classes.topLevelFilter }}\n        label={\n          <FilterCheckBox\n            label={label}\n            type={\"game\"}\n            checked={checked(label, \"game\")}\n            onChecked={onChecked}\n          />\n        }\n      />\n\n      <Popover\n        id={`${id}_${label}`}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        style={{\n          maxWidth: \"50%\",\n        }}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        {nestedFilters.map(({ label, children }) => (\n          <NestedExpansionPanel\n            key={label}\n            label={label}\n            classes={classes}\n            onChecked={onChecked}\n            checked={checked}\n            children={children.map(({ label }) => (\n              <NestedExpansionPanel\n                classes={classes}\n                key={label}\n                label={label}\n                onChecked={onChecked}\n                checked={checked}\n              />\n            ))}\n          />\n        ))}\n      </Popover>\n    </div>\n  );\n};\n\nfunction Filters({ setActiveFilters, activeFilters }) {\n  const classes = useStyles();\n\n  const toggleFilter = (value, type, enabled) => {\n    const key = `${type}:${value}`;\n    if (enabled) {\n      setActiveFilters({\n        ...activeFilters,\n        [key]: type,\n      });\n    } else {\n      const { [key]: type, ...newActiveFilters } = activeFilters;\n      setActiveFilters(newActiveFilters);\n    }\n  };\n\n  const checked = (value, type) => {\n    const key = `${type}:${value}`;\n    return !!activeFilters[key];\n  };\n\n  const { loading, error, data } = useFetch(\n    `${apiUrl}/available_filters`,\n    {},\n    []\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    return (\n      <Typography style={{ margin: \"10px\" }} color=\"secondary\">\n        Error loading filters...\n      </Typography>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      {data.map(({ name: label, factions }) => {\n        return (\n          <TopLevelFilter\n            classes={classes}\n            key={label}\n            label={label}\n            toggleFilter={toggleFilter}\n            checked={checked}\n            nestedFilters={factions.map((faction) => ({\n              label: faction.name,\n              children: faction.races.map((race) => ({ label: race.name })),\n            }))}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Filters;\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\n\nfunction AppliedFilters({ activeFilters }) {\n  return (\n    <div className=\"AppliedFilters\">\n      {Object.keys(activeFilters).map((name) => (\n        <Chip\n          key={`${name}`}\n          label={`${name}`}\n          // onDelete={handleDelete}\n          color=\"primary\"\n          variant=\"outlined\"\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default AppliedFilters;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableBody: {\n    color: \"white\",\n  },\n  tableCell: {\n    color: \"white\",\n  },\n}));\n\nconst contains = (a, b) =>\n  a.toLowerCase().trim().includes(b.toLowerCase().trim());\n\nconst toName = (name, title) => {\n  if (name && title && !contains(name, title)) {\n    return `${name}: ${title}`;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return title;\n};\n\nconst formatWebsite = (value) => value.replace(/www\\./, \"\");\n\nconst formatCurrency = (value) => `£${value}`;\n\nfunction Results({ data }) {\n  const classes = useStyles();\n  return data.results ? (\n    <div className=\"Results\">\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableBody classes={{ root: classes.tableBody }}>\n            {data.results.map(\n              (\n                {\n                  _score,\n                  id,\n                  game,\n                  website,\n                  race,\n                  price,\n                  faction,\n                  link,\n                  name,\n                  title,\n                  inStockQuantity,\n                },\n                i\n              ) => (\n                <TableRow\n                  style={\n                    i % 2\n                      ? { background: \"rgba(255, 255, 255, 0.05)\" }\n                      : { background: \"rgba(255, 255, 255, 0)\" }\n                  }\n                  key={id}\n                >\n                  <TableCell classes={{ root: classes.tableCell }} align=\"left\">\n                    {toName(name, title)}\n                  </TableCell>\n                  <TableCell classes={{ root: classes.tableBody }} align=\"left\">\n                    {race}\n                  </TableCell>\n                  <TableCell classes={{ root: classes.tableBody }} align=\"left\">\n                    {formatWebsite(website)}\n                  </TableCell>\n                  <TableCell classes={{ root: classes.tableBody }} align=\"left\">\n                    {formatCurrency(price)}\n                  </TableCell>\n                  <TableCell classes={{ root: classes.tableBody }} align=\"left\">\n                    <Link target=\"_blank\" href={link}>\n                      <LaunchIcon />\n                    </Link>\n                  </TableCell>\n                </TableRow>\n              )\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  ) : null;\n}\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useFetch from \"use-http\";\n\nimport Filters from \"./filters/Filters\";\nimport AppliedFilters from \"./filters/AppliedFilters\";\nimport Results from \"./results/Results\";\n\nimport { apiUrl } from \"./config\";\n\nconst title = \"Miniature Search\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiFormLabel: {\n      // Name of the rule\n      root: {\n        color: \"white\",\n      },\n    },\n    MuiInput: {\n      // Name of the rule\n      underline: {\n        \"&&&&:before\": {\n          borderBottom: \"1px solid white\",\n        },\n      },\n      input: {\n        color: \"white\",\n      },\n    },\n  },\n});\n\nconst Loading = () => <CircularProgress />;\nfunction App() {\n  const [results, setResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [activeFilters, setActiveFilters] = useState({});\n\n  const filtersToQuery = () => {\n    return Object.keys(activeFilters).map((activeFilterKey) => {\n      const name = activeFilters[activeFilterKey];\n      const value = activeFilterKey.replace(`${name}:`, \"\");\n\n      return { [name]: value };\n    });\n  };\n\n  const options = {\n    body: {\n      input: searchTerm,\n      filters: filtersToQuery(),\n    },\n    headers: { \"Content-Type\": \"application/json\" },\n  };\n  const { post, response, loading, error } = useFetch(apiUrl);\n\n  const search = async () => {\n    if (!searchTerm) {\n      return;\n    }\n\n    const results = await post(\"/search\", options.body);\n\n    if (response.ok) setResults(results);\n  };\n\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <title>{title}</title>\n      </MetaTags>\n      <ThemeProvider theme={theme}>\n        <header className=\"App-header\">\n          <form\n            noValidate\n            autoComplete=\"off\"\n            style={{\n              width: \"50%\",\n              paddingTop: \"8%\",\n            }}\n          >\n            <TextField\n              label=\"Search\"\n              style={{\n                width: \"80%\",\n                verticalAlign: \"bottom\",\n              }}\n              InputProps={{\n                onChange: (event) => setSearchTerm(event.target.value),\n                onKeyPress: (event) => {\n                  if (event.key === \"Enter\") {\n                    search();\n                    event.preventDefault();\n                  }\n                },\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginLeft: \"10px\" }}\n              onClick={search}\n            >\n              Search\n            </Button>\n          </form>\n          <Filters\n            activeFilters={activeFilters}\n            setActiveFilters={setActiveFilters}\n          />\n          <AppliedFilters activeFilters={activeFilters} />\n          {error && (\n            <Typography style={{ margin: \"10px\" }} color=\"secondary\">\n              Error loading results...\n            </Typography>\n          )}\n          {loading && <Loading />}\n          {!error && !loading && <Results data={results} />}\n        </header>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport TagManager from \"react-gtm-module\";\nimport { gtmId, gtmAuth, gaId } from \"./config\";\nimport ReactGA from \"react-ga\";\n\nconst tagManagerArgs = {\n  gtmId,\n  auth: gtmAuth,\n  preview: \"env-1\",\n};\n\nTagManager.initialize(tagManagerArgs);\n\nReactGA.initialize(\"gaId\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}